[project]
name = "turtlyscope"
authors = [
    { name = "Thomas F. Hagelien", email = "thomas.f.hagelien@sintef.no" }
]
version = "0.1.0"
description = "TurtlyScope is an interactive web tool for visualizing RDF graphs written in Turtle (TTL) format. It transforms plain RDF triples into a network diagram, helping you quickly explore relationships between subjects, predicates, and objects."
license = {file = "LICENSE"}
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11"

dependencies = [
    "black>=25.9.0",
    "fastapi>=0.118.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "pip-tools>=7.5.1",
    "pydantic-settings>=2.11.0",
    "pytest>=8.4.2",
    "python-multipart>=0.0.20",
    "pyvis>=0.3.2",
    "rdflib>=7.2.1",
    "ruff>=0.13.3",
    "uvicorn>=0.37.0",
]

### Tool configurations

[tool.flit.sdist]
exclude = [
    ".gitignore",
    ".markdownlint.yaml",
    ".pre-commit-config.yaml",
    ".github/",
]

[tool.black]
line-length = 108

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
hide_error_codes = false
allow_redefinition = true
warn_unreachable = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 108

[tool.ruff.lint]
extend-select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "I",  # isort
  "ARG",  # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN",  # flake8-import-conventions
  "G",  # flake8-logging-format
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "YTT",  # flake8-2020
  "EXE",  # flake8-executable
  "PYI",  # flake8-pyi
]
ignore = [
  "PLC",  # Convention related pylint codes
  "PLR",  # Refactor related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]

